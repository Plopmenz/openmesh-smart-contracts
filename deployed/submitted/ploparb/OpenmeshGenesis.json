{
  "type": "deployment",
  "id": "OpenmeshGenesis",
  "batch": "ploparb",
  "batchIndex": 26,
  "deploymentAddress": "0x4050854BB53df4F39eE57Ce690bD3dE12a713C3a",
  "constructorArgs": [
    ["30000", "27500", "25000"],
    "0xd1275764CDe23bE2799AaadDac24a253396C69f3",
    "0xD9BefB58C0256cD662e3dC45a688F6d75eC485B0",
    1709337600,
    [1710028800, 1710892800, 1711756800],
    "500000000000000000",
    "2000000000000000000"
  ],
  "to": "0x4e59b44847b379578588920ca78fbf26c0b4956c",
  "value": "0",
  "data": "0x00000000000000000000000000000000000000000000000000706c6f7061726261012060405234620003aa5762000d31803803806200001e81620003bf565b92833981019060e081830312620003aa5780516001600160401b039290838111620003aa5782019281601f85011215620003aa5783516020906200006c6200006682620003e5565b620003bf565b9582878381520183819360051b83010191868311620003aa5784809101915b838310620003ae575087015191506001600160a01b0390508082168203620003aa5760408701519081168103620003aa57620000ca60608801620003fd565b6080880151868111620003aa5788019187601f84011215620003aa57825197620000f8620000668a620003e5565b9387858b8152019088829b60051b820101928311620003aa5788809101915b8383106200038f575050505060c060a08a01519901519951938785116200034a5768010000000000000000948581116200034a57600196875482895580831062000371575b50875f52885f20885f5b8481106200035e57505050505060805260a05260c052519384116200034a5783116200034a576002938454848655808510620002f9575b5092845f52825f20928160031c945f5b868110620002a257506007198316909203918262000241575b888860e052610100908152604051610909918262000428833960805182818160c80152818161039901526104b4015260a05182818161014901526106df015260c0518281816105c701526107fb015260e0518281816037015281816102ab0152610725015251818181605e015281816102d201526106020152f35b9291905f965f905b838210620002665750505050505001555f808080808080620001c6565b909192938362000294879a63ffffffff849951169086861b60031b9163ffffffff809116831b921b19161790565b990195949392019062000249565b84905f805b858b60088310620002c0575050508188015501620001ad565b869495938363ffffffff620002eb9495995116921b60031b9163ffffffff809116831b921b19161790565b9201930190869291620002a7565b6200032990865f52845f20600780880160031c820192601c898b1b168062000330575b500160031c01906200040f565b5f6200019d565b5f1990818601918254918b0360031b1c1690555f6200031c565b634e487b7160e01b5f52604160045260245ffd5b8b84519401938184015501899062000166565b6200038890895f52838b5f2091820191016200040f565b5f6200015c565b81906200039c84620003fd565b815201910190889062000117565b5f80fd5b82518152918101918591016200008b565b6040519190601f01601f191682016001600160401b038111838210176200034a57604052565b6001600160401b0381116200034a5760051b60200190565b519063ffffffff82168203620003aa57565b8181106200041b575050565b5f81556001016200040f56fe604060808152600480361015610301575b361561028a575f90341561027c57335f526020915f8352835f2054348101809111610269577f0000000000000000000000000000000000000000000000000000000000000000811061025a577f00000000000000000000000000000000000000000000000000000000000000009182821161024a5761008d6107f3565b92833402933485040361023757865163a9059cbb60e01b815233818701526024810185905290831494906001600160a01b039087816044815f7f000000000000000000000000000000000000000000000000000000000000000087165af190811561022d5787916101f7575b50610147575b7f7afb7377664352bd569dc64d3f845c00dbf2bb349b28db9e3f9aec12f7baafcc60808888888c89818a338152808752205580519333855234908501528301526060820152a1005b7f00000000000000000000000000000000000000000000000000000000000000001690813b156101f3575f91602483928a5194859384926335313c2160e11b845233908401525af180156101e957968092608097969594927f7afb7377664352bd569dc64d3f845c00dbf2bb349b28db9e3f9aec12f7baafcc996101d5575b509297508193949596506100ff565b90506101e19150610889565b815f806101c6565b87513d5f823e3d90fd5b5f80fd5b90508781813d8311610226575b61020e81836108b1565b810103126101f35751801515036101f357855f6100f9565b503d610204565b89513d5f823e3d90fd5b601185634e487b7160e01b5f525260245ffd5b855163084d70b160e21b81528490fd5b845162572b0760e61b81528390fd5b601183634e487b7160e01b5f525260245ffd5b825163580d5e4b60e01b8152fd5b5f90341561027c57335f526020915f8352835f2054348101809111610269577f0000000000000000000000000000000000000000000000000000000000000000811061025a577f00000000000000000000000000000000000000000000000000000000000000009182821161024a5761008d6107f3565b5f803560e01c806322d60d17146107485780632fcafec31461070e57806347ccca02146106cb578063753c26381461068d5780638da5cb5b1461065f578063995c5e9d14610625578063ad1e0901146105eb578063be9a6555146105ab578063d2052a421461040d578063d5400f6f146103cc5763fc0c546a146103855750610010565b82346103c857816003193601126103c857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5091903461040957602036600319011261040957359160015483101561040657506103f86020926107be565b91905490519160031b1c8152f35b80fd5b8280fd5b5091346101f3575f3660031901126101f3576002545f1981019081116102695761043b63ffffffff9161076b565b90549060031b1c16421061059e575f80808047733f70b483a5cc80cf6e80916621bf40a11081743d5af13d15610599573d67ffffffffffffffff811161058657825190610492601f8201601f1916602001836108b1565b81525f60203d92013e5b156105795780516370a0823160e01b815230818401527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169290602081602481875afa90811561056f575f9161053d575b50833b156101f35760245f928385519687948593630852cd8d60e31b85528401525af19081156105345750610528575080f35b6105329150610889565b005b513d5f823e3d90fd5b90506020813d602011610567575b81610558602093836108b1565b810103126101f357515f6104f5565b3d915061054b565b83513d5f823e3d90fd5b51633d3a938360e01b8152fd5b604184634e487b7160e01b5f525260245ffd5b61049c565b51635ddf2aeb60e01b8152fd5b83346101f3575f3660031901126101f3576020905163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b83346101f3575f3660031901126101f357602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101f35760203660031901126101f357356001600160a01b03811691908290036101f3576020915f525f8252805f20549051908152f35b83346101f3575f3660031901126101f35760209051733f70b483a5cc80cf6e80916621bf40a11081743d8152f35b5050346101f35760203660031901126101f35735906002548210156101f35763ffffffff6106bc60209361076b565b92905490519260031b1c168152f35b83346101f3575f3660031901126101f357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b83346101f3575f3660031901126101f357602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83346101f3575f3660031901126101f3576020906107646107f3565b9051908152f35b906002548210156107aa5760025f52601c8260031c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019260021b1690565b634e487b7160e01b5f52603260045260245ffd5b6001548110156107aa5760015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601905f90565b63ffffffff807f000000000000000000000000000000000000000000000000000000000000000016421061087757600254905f5b828110610840576040516346ea3b2b60e01b8152600490fd5b8161084a8261076b565b919054600392831b1c1642106108635750600101610827565b925061086f91506107be565b9054911b1c90565b6040516346ea3b2b60e01b8152600490fd5b67ffffffffffffffff811161089d57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761089d5760405256fea264697066735822122064eb484f31691f3a140d7c3547790c4e445a9462a300aae51bce306b67f935e064736f6c6343000817003300000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000d1275764cde23be2799aaaddac24a253396c69f3000000000000000000000000d9befb58c0256cd662e3dc45a688f6d75ec485b00000000000000000000000000000000000000000000000000000000065e26c00000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000006f05b59d3b200000000000000000000000000000000000000000000000000001bc16d674ec80000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000075300000000000000000000000000000000000000000000000000000000000006b6c00000000000000000000000000000000000000000000000000000000000061a800000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000065ecf8000000000000000000000000000000000000000000000000000000000065fa27000000000000000000000000000000000000000000000000000000000066075600",
  "gas": "714306",
  "from": "0xaF7E68bCb2Fc7295492A00177f14F59B92814e70",
  "transactionSettings": {
    "chainId": 11155111,
    "nonce": "212",
    "baseFee": "1500000000",
    "priorityFee": "1500000000"
  },
  "salt": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ploparb",
  "artifact": {
    "abi": [
      {
        "type": "constructor",
        "inputs": [
          {
            "name": "_tokensPerWeiPerPeriod",
            "type": "uint256[]",
            "internalType": "uint256[]"
          },
          {
            "name": "_token",
            "type": "address",
            "internalType": "contract IERC20MintBurnable"
          },
          {
            "name": "_nft",
            "type": "address",
            "internalType": "contract IERC721Mintable"
          },
          { "name": "_start", "type": "uint32", "internalType": "uint32" },
          {
            "name": "_periodEnds",
            "type": "uint32[]",
            "internalType": "uint32[]"
          },
          {
            "name": "_minWeiPerAccount",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "_maxWeiPerAccount",
            "type": "uint256",
            "internalType": "uint256"
          }
        ],
        "stateMutability": "nonpayable"
      },
      { "type": "fallback", "stateMutability": "payable" },
      { "type": "receive", "stateMutability": "payable" },
      {
        "type": "function",
        "name": "collectContributions",
        "inputs": [],
        "outputs": [],
        "stateMutability": "nonpayable"
      },
      {
        "type": "function",
        "name": "contributed",
        "inputs": [
          { "name": "", "type": "address", "internalType": "address" }
        ],
        "outputs": [
          { "name": "", "type": "uint256", "internalType": "uint256" }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "maxWeiPerAccount",
        "inputs": [],
        "outputs": [
          { "name": "", "type": "uint256", "internalType": "uint256" }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "minWeiPerAccount",
        "inputs": [],
        "outputs": [
          { "name": "", "type": "uint256", "internalType": "uint256" }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "nft",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "contract IERC721Mintable"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "owner",
        "inputs": [],
        "outputs": [
          { "name": "", "type": "address", "internalType": "address" }
        ],
        "stateMutability": "pure"
      },
      {
        "type": "function",
        "name": "periodEnds",
        "inputs": [
          { "name": "", "type": "uint256", "internalType": "uint256" }
        ],
        "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "start",
        "inputs": [],
        "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "token",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "contract IERC20MintBurnable"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "tokensPerWei",
        "inputs": [],
        "outputs": [
          { "name": "", "type": "uint256", "internalType": "uint256" }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "tokensPerWeiPerPeriod",
        "inputs": [
          { "name": "", "type": "uint256", "internalType": "uint256" }
        ],
        "outputs": [
          { "name": "", "type": "uint256", "internalType": "uint256" }
        ],
        "stateMutability": "view"
      },
      {
        "type": "event",
        "name": "ContributionMade",
        "inputs": [
          {
            "name": "from",
            "type": "address",
            "indexed": false,
            "internalType": "address"
          },
          {
            "name": "amount",
            "type": "uint256",
            "indexed": false,
            "internalType": "uint256"
          },
          {
            "name": "givenTokens",
            "type": "uint256",
            "indexed": false,
            "internalType": "uint256"
          },
          {
            "name": "givenNFT",
            "type": "bool",
            "indexed": false,
            "internalType": "bool"
          }
        ],
        "anonymous": false
      },
      { "type": "error", "name": "FundraiserNotOverYet", "inputs": [] },
      { "type": "error", "name": "LessThanMinPerAccount", "inputs": [] },
      { "type": "error", "name": "NoFundsAttached", "inputs": [] },
      { "type": "error", "name": "NotDuringFundraisingPeriod", "inputs": [] },
      { "type": "error", "name": "SurpassMaxPerAccount", "inputs": [] },
      { "type": "error", "name": "TreasuryReverted", "inputs": [] }
    ],
    "bytecode": "0x61012060405234620003aa5762000d31803803806200001e81620003bf565b92833981019060e081830312620003aa5780516001600160401b039290838111620003aa5782019281601f85011215620003aa5783516020906200006c6200006682620003e5565b620003bf565b9582878381520183819360051b83010191868311620003aa5784809101915b838310620003ae575087015191506001600160a01b0390508082168203620003aa5760408701519081168103620003aa57620000ca60608801620003fd565b6080880151868111620003aa5788019187601f84011215620003aa57825197620000f8620000668a620003e5565b9387858b8152019088829b60051b820101928311620003aa5788809101915b8383106200038f575050505060c060a08a01519901519951938785116200034a5768010000000000000000948581116200034a57600196875482895580831062000371575b50875f52885f20885f5b8481106200035e57505050505060805260a05260c052519384116200034a5783116200034a576002938454848655808510620002f9575b5092845f52825f20928160031c945f5b868110620002a257506007198316909203918262000241575b888860e052610100908152604051610909918262000428833960805182818160c80152818161039901526104b4015260a05182818161014901526106df015260c0518281816105c701526107fb015260e0518281816037015281816102ab0152610725015251818181605e015281816102d201526106020152f35b9291905f965f905b838210620002665750505050505001555f808080808080620001c6565b909192938362000294879a63ffffffff849951169086861b60031b9163ffffffff809116831b921b19161790565b990195949392019062000249565b84905f805b858b60088310620002c0575050508188015501620001ad565b869495938363ffffffff620002eb9495995116921b60031b9163ffffffff809116831b921b19161790565b9201930190869291620002a7565b6200032990865f52845f20600780880160031c820192601c898b1b168062000330575b500160031c01906200040f565b5f6200019d565b5f1990818601918254918b0360031b1c1690555f6200031c565b634e487b7160e01b5f52604160045260245ffd5b8b84519401938184015501899062000166565b6200038890895f52838b5f2091820191016200040f565b5f6200015c565b81906200039c84620003fd565b815201910190889062000117565b5f80fd5b82518152918101918591016200008b565b6040519190601f01601f191682016001600160401b038111838210176200034a57604052565b6001600160401b0381116200034a5760051b60200190565b519063ffffffff82168203620003aa57565b8181106200041b575050565b5f81556001016200040f56fe604060808152600480361015610301575b361561028a575f90341561027c57335f526020915f8352835f2054348101809111610269577f0000000000000000000000000000000000000000000000000000000000000000811061025a577f00000000000000000000000000000000000000000000000000000000000000009182821161024a5761008d6107f3565b92833402933485040361023757865163a9059cbb60e01b815233818701526024810185905290831494906001600160a01b039087816044815f7f000000000000000000000000000000000000000000000000000000000000000087165af190811561022d5787916101f7575b50610147575b7f7afb7377664352bd569dc64d3f845c00dbf2bb349b28db9e3f9aec12f7baafcc60808888888c89818a338152808752205580519333855234908501528301526060820152a1005b7f00000000000000000000000000000000000000000000000000000000000000001690813b156101f3575f91602483928a5194859384926335313c2160e11b845233908401525af180156101e957968092608097969594927f7afb7377664352bd569dc64d3f845c00dbf2bb349b28db9e3f9aec12f7baafcc996101d5575b509297508193949596506100ff565b90506101e19150610889565b815f806101c6565b87513d5f823e3d90fd5b5f80fd5b90508781813d8311610226575b61020e81836108b1565b810103126101f35751801515036101f357855f6100f9565b503d610204565b89513d5f823e3d90fd5b601185634e487b7160e01b5f525260245ffd5b855163084d70b160e21b81528490fd5b845162572b0760e61b81528390fd5b601183634e487b7160e01b5f525260245ffd5b825163580d5e4b60e01b8152fd5b5f90341561027c57335f526020915f8352835f2054348101809111610269577f0000000000000000000000000000000000000000000000000000000000000000811061025a577f00000000000000000000000000000000000000000000000000000000000000009182821161024a5761008d6107f3565b5f803560e01c806322d60d17146107485780632fcafec31461070e57806347ccca02146106cb578063753c26381461068d5780638da5cb5b1461065f578063995c5e9d14610625578063ad1e0901146105eb578063be9a6555146105ab578063d2052a421461040d578063d5400f6f146103cc5763fc0c546a146103855750610010565b82346103c857816003193601126103c857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5091903461040957602036600319011261040957359160015483101561040657506103f86020926107be565b91905490519160031b1c8152f35b80fd5b8280fd5b5091346101f3575f3660031901126101f3576002545f1981019081116102695761043b63ffffffff9161076b565b90549060031b1c16421061059e575f80808047733f70b483a5cc80cf6e80916621bf40a11081743d5af13d15610599573d67ffffffffffffffff811161058657825190610492601f8201601f1916602001836108b1565b81525f60203d92013e5b156105795780516370a0823160e01b815230818401527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169290602081602481875afa90811561056f575f9161053d575b50833b156101f35760245f928385519687948593630852cd8d60e31b85528401525af19081156105345750610528575080f35b6105329150610889565b005b513d5f823e3d90fd5b90506020813d602011610567575b81610558602093836108b1565b810103126101f357515f6104f5565b3d915061054b565b83513d5f823e3d90fd5b51633d3a938360e01b8152fd5b604184634e487b7160e01b5f525260245ffd5b61049c565b51635ddf2aeb60e01b8152fd5b83346101f3575f3660031901126101f3576020905163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b83346101f3575f3660031901126101f357602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346101f35760203660031901126101f357356001600160a01b03811691908290036101f3576020915f525f8252805f20549051908152f35b83346101f3575f3660031901126101f35760209051733f70b483a5cc80cf6e80916621bf40a11081743d8152f35b5050346101f35760203660031901126101f35735906002548210156101f35763ffffffff6106bc60209361076b565b92905490519260031b1c168152f35b83346101f3575f3660031901126101f357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b83346101f3575f3660031901126101f357602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83346101f3575f3660031901126101f3576020906107646107f3565b9051908152f35b906002548210156107aa5760025f52601c8260031c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019260021b1690565b634e487b7160e01b5f52603260045260245ffd5b6001548110156107aa5760015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601905f90565b63ffffffff807f000000000000000000000000000000000000000000000000000000000000000016421061087757600254905f5b828110610840576040516346ea3b2b60e01b8152600490fd5b8161084a8261076b565b919054600392831b1c1642106108635750600101610827565b925061086f91506107be565b9054911b1c90565b6040516346ea3b2b60e01b8152600490fd5b67ffffffffffffffff811161089d57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761089d5760405256fea264697066735822122064eb484f31691f3a140d7c3547790c4e445a9462a300aae51bce306b67f935e064736f6c63430008170033",
    "compiler": { "version": "v0.8.23+commit.f704f362" },
    "contractName": "src/OpenmeshGenesis.sol:OpenmeshGenesis",
    "jsonDescription": {
      "language": "Solidity",
      "sources": {
        "lib/open-token/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
          "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
        },
        "lib/open-token/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
          "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
        },
        "lib/open-token/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
          "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
        },
        "lib/open-token/src/IERC20MintBurnable.sol": {
          "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC20} from \"../lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\n\ninterface IERC20MintBurnable is IERC20 {\n    /// @notice Mints tokens to a specific account.\n    /// @param account The account that will receive the minted tokens.\n    /// @param amount The amount of tokens to mint.\n    /// @dev Should be locked behind a permission/restriction.\n    function mint(address account, uint256 amount) external;\n\n    /// @notice Burns tokens from your account.\n    /// @param amount The amount of tokens to burn.\n    function burn(uint256 amount) external;\n}\n"
        },
        "lib/openmesh-admin/lib/ens-reverse-claimable/src/ENSReverseClaimable.sol": {
          "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract ENSReverseClaimable {\n    /// @notice ENS reverse name resolution is claimable by the owner of the contract.\n    function owner() external pure virtual returns (address) {\n        return 0xaF7E68bCb2Fc7295492A00177f14F59B92814e70; // plopmenz.eth\n    }\n}\n"
        },
        "lib/openmesh-admin/src/Openmesh.sol": {
          "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract Openmesh {\n    address constant OPENMESH_ADMIN = 0x3F70b483A5cc80cF6E80916621bF40A11081743D;\n}\n"
        },
        "lib/openmesh-admin/src/OpenmeshENSReverseClaimable.sol": {
          "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ENSReverseClaimable} from \"../lib/ens-reverse-claimable/src/ENSReverseClaimable.sol\";\nimport {Openmesh} from \"./Openmesh.sol\";\n\ncontract OpenmeshENSReverseClaimable is Openmesh, ENSReverseClaimable {\n    /// @inheritdoc ENSReverseClaimable\n    function owner() external pure override returns (address) {\n        return OPENMESH_ADMIN;\n    }\n}\n"
        },
        "lib/validator-pass/src/IERC721Mintable.sol": {
          "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ninterface IERC721Mintable is IERC721 {\n    /// Mints an ERC721 token to a specific account.\n    /// @dev Should be locked behind a permission.\n    /// @param account The account that will receive the minted token.\n    function mint(address account) external;\n}\n"
        },
        "src/IOpenmeshGenesis.sol": {
          "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOpenmeshGenesis {\n    error NoFundsAttached();\n    error LessThanMinPerAccount();\n    error SurpassMaxPerAccount();\n\n    error TreasuryReverted();\n\n    error NotDuringFundraisingPeriod();\n    error FundraiserNotOverYet();\n\n    event ContributionMade(address from, uint256 amount, uint256 givenTokens, bool givenNFT);\n\n    /// Returns the current rate (amount of tokens received per wei of native currency contributed).\n    function tokensPerWei() external view returns (uint256);\n\n    /// Sends all native currency stored in this contract to the DAO treasury.\n    /// @dev Can only be called after the event is over. Any remaining tokens that the contract has will be burned.\n    function collectContributions() external;\n}\n"
        },
        "src/OpenmeshGenesis.sol": {
          "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOpenmeshGenesis} from \"./IOpenmeshGenesis.sol\";\nimport {IERC20MintBurnable} from \"../lib/open-token/src/IERC20MintBurnable.sol\";\nimport {IERC721Mintable} from \"../lib/validator-pass/src/IERC721Mintable.sol\";\n\nimport {OpenmeshENSReverseClaimable} from \"../lib/openmesh-admin/src/OpenmeshENSReverseClaimable.sol\";\n\ncontract OpenmeshGenesis is OpenmeshENSReverseClaimable, IOpenmeshGenesis {\n    mapping(address => uint256) public contributed;\n    uint256[] public tokensPerWeiPerPeriod;\n    IERC20MintBurnable public immutable token;\n    IERC721Mintable public immutable nft;\n    uint32 public immutable start;\n    uint32[] public periodEnds;\n    uint256 public immutable minWeiPerAccount;\n    uint256 public immutable maxWeiPerAccount;\n\n    constructor(\n        uint256[] memory _tokensPerWeiPerPeriod,\n        IERC20MintBurnable _token,\n        IERC721Mintable _nft,\n        uint32 _start,\n        uint32[] memory _periodEnds,\n        uint256 _minWeiPerAccount,\n        uint256 _maxWeiPerAccount\n    ) {\n        tokensPerWeiPerPeriod = _tokensPerWeiPerPeriod;\n        token = _token;\n        nft = _nft;\n        start = _start;\n        periodEnds = _periodEnds;\n        minWeiPerAccount = _minWeiPerAccount;\n        maxWeiPerAccount = _maxWeiPerAccount;\n    }\n\n    fallback() external payable {\n        _fundraise();\n    }\n\n    receive() external payable {\n        _fundraise();\n    }\n\n    /// @inheritdoc IOpenmeshGenesis\n    function tokensPerWei() public view returns (uint256) {\n        if (block.timestamp < start) {\n            revert NotDuringFundraisingPeriod();\n        }\n\n        for (uint256 periodIndex; periodIndex < periodEnds.length;) {\n            // Find first period with block.timestamp earlier than that period end\n            if (block.timestamp < periodEnds[periodIndex]) {\n                return tokensPerWeiPerPeriod[periodIndex];\n            }\n\n            unchecked {\n                ++periodIndex;\n            }\n        }\n\n        revert NotDuringFundraisingPeriod();\n    }\n\n    function _fundraise() internal {\n        if (msg.value == 0) {\n            revert NoFundsAttached();\n        }\n\n        uint256 personalContribution = contributed[msg.sender] + msg.value;\n        if (personalContribution < minWeiPerAccount) {\n            revert LessThanMinPerAccount();\n        }\n        if (personalContribution > maxWeiPerAccount) {\n            revert SurpassMaxPerAccount();\n        }\n\n        uint256 giveTokens = msg.value * tokensPerWei();\n        bool giveNFT = personalContribution == maxWeiPerAccount;\n\n        token.transfer(msg.sender, giveTokens);\n        if (giveNFT) {\n            nft.mint(msg.sender);\n        }\n\n        contributed[msg.sender] = personalContribution;\n        emit ContributionMade(msg.sender, msg.value, giveTokens, giveNFT);\n    }\n\n    /// @inheritdoc IOpenmeshGenesis\n    function collectContributions() external {\n        if (block.timestamp < periodEnds[periodEnds.length - 1]) {\n            revert FundraiserNotOverYet();\n        }\n\n        // Send all native currency of this contract to treasury\n        (bool succes,) = OPENMESH_ADMIN.call{value: address(this).balance}(\"\");\n        if (!succes) {\n            revert TreasuryReverted();\n        }\n\n        // Burn remaining tokens\n        token.burn(token.balanceOf(address(this)));\n    }\n}\n"
        }
      },
      "settings": {
        "remappings": [
          "@openzeppelin/contracts/=lib/open-token/lib/openzeppelin-contracts/contracts/",
          "ds-test/=lib/open-token/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
          "ens-reverse-claimable/=lib/openmesh-admin/lib/ens-reverse-claimable/src/",
          "erc4626-tests/=lib/open-token/lib/openzeppelin-contracts/lib/erc4626-tests/",
          "forge-std/=lib/forge-std/src/",
          "open-token/=lib/open-token/src/",
          "openmesh-admin/=lib/openmesh-admin/src/",
          "openzeppelin-contracts/=lib/open-token/lib/openzeppelin-contracts/",
          "smart-account/=lib/openmesh-admin/lib/smart-account/src/",
          "validator-pass/=lib/validator-pass/src/"
        ],
        "optimizer": { "enabled": true, "runs": 200 },
        "evmVersion": "shanghai",
        "viaIR": true
      },
      "metadata": { "useLiteralContent": true }
    },
    "license": "MIT"
  },
  "source": "/home/plopmenz/openmesh-smart-contracts/lib/openmesh-genesis",
  "submitted": {
    "transactionHash": "0x40467b2c765fd9c30ed99637f58b460ccedb80058e418dbac36f8d320650548d",
    "date": "2024-04-15T18:35:18.333Z"
  }
}
