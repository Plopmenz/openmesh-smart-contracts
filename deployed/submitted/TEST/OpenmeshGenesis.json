{"type":"deployment","id":"OpenmeshGenesis","batch":"TEST","batchIndex":18,"deploymentAddress":"0x4662d0de51fCA9e10AdD8C39171047dE639E2e22","constructorArgs":[["30000","27500","25000"],"0xe13f4712233C534fbABd769e92B4acc716532157","0x30D60732a26137696a2671CfEa19A9E8510E35fA",1709337600,[1710028800,1710892800,1711756800],"500000000000000000","2000000000000000000"],"to":"0x4e59b44847b379578588920ca78fbf26c0b4956c","value":"0","data":"0x00000000000000000000000000000000000000004f50454e4d4553485445535461012060405234620003c95762000d7b803803806200001e81620003df565b92833981019060e081830312620003c95780516001600160401b0390818111620003c95782019280601f85011215620003c95783516020906200006b620000658262000405565b620003df565b9582878381520183819360051b83010191858311620003c95784809101915b838310620003ce57508701516001600160a01b0396925090508581168103620003c95760408701519586168603620003c957620000ca606088016200041d565b6080880151838111620003c95788019086601f83011215620003c957815196620000f8620000658962000405565b9287848a8152019088829a60051b820101928311620003c95788809101915b838310620003ae575050505060c060a08a015199015199519784891162000398576801000000000000000093848a11620003985760019687548b8955808c1062000378575b509960009a888c52898c20898d5b8481106200036557505050505060805260a05260c05251918211620003515781116200033d576002938454828655808310620002eb575b5092848652808620938260031c95875b878110620002a757506007198416909303928362000245575b898960e052610100908152604051610932918262000449833960805182818160cb015281816103a101526104b9015260a05182818161014f01526106fe015260c0518281816105e30152610821015260e051828181603a015281816102b201526107450152518181816061015281816102d9015261061f0152f35b909392919087905b8382106200026b5750505050505001553880808080808080620001ca565b909192938362000299879a63ffffffff849951169086861b60031b9163ffffffff809116831b921b19161790565b99019594939201906200024d565b8590898a5b8660088210620002c35750508189015501620001b1565b8651960195899463ffffffff91821683881b60031b90811b92901b19909316179101620002ac565b6200031b90868852858820600780860160031c820192601c878b1b168062000322575b500160031c01906200042f565b38620001a1565b60001990818601918254918c0360031b1c169055386200030e565b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b86526041600452602486fd5b8c845194019381840155018a906200016a565b6200039190896000528c8b60002091820191016200042f565b386200015c565b634e487b7160e01b600052604160045260246000fd5b8190620003bb846200041d565b815201910190889062000117565b600080fd5b82518152918101918591016200008a565b6040519190601f01601f191682016001600160401b038111838210176200039857604052565b6001600160401b038111620003985760051b60200190565b519063ffffffff82168203620003c957565b8181106200043b575050565b600081556001016200042f56fe60406080815260049081361015610308575b361561028f57600091341561028157338352602091838352808420549034820180921161026e577f00000000000000000000000000000000000000000000000000000000000000008210610260577f00000000000000000000000000000000000000000000000000000000000000009182811161025057610090610819565b92833402933485040361023d57825163a9059cbb60e01b815233818701526024810185905290821494906001600160a01b039087816044818c7f000000000000000000000000000000000000000000000000000000000000000087165af18015610233579087916101f5575b5061014a575b7f7afb7377664352bd569dc64d3f845c00dbf2bb349b28db9e3f9aec12f7baafcc60808888888888818f338152808752205580519333855234908501528301526060820152a1005b9087917f000000000000000000000000000000000000000000000000000000000000000016803b156101f15760248392865194859384926335313c2160e11b845233908401525af180156101e757927f7afb7377664352bd569dc64d3f845c00dbf2bb349b28db9e3f9aec12f7baafcc978193926080989796956101d8575b50975092939495819250610102565b6101e1906108b0565b386101c9565b83513d89823e3d90fd5b8280fd5b90508781813d831161022c575b61020c81836108da565b810103126102285751801515036102245785386100fc565b8780fd5b8880fd5b503d610202565b85513d8b823e3d90fd5b634e487b7160e01b875260118552602487fd5b815163084d70b160e21b81528490fd5b5162572b0760e61b81529050fd5b634e487b7160e01b855260118352602485fd5b905163580d5e4b60e01b8152fd5b600091341561028157338352602091838352808420549034820180921161026e577f00000000000000000000000000000000000000000000000000000000000000008210610260577f00000000000000000000000000000000000000000000000000000000000000009182811161025057610090610819565b6000803560e01c806322d60d17146107685780632fcafec31461072d57806347ccca02146106e9578063753c2638146106aa5780638da5cb5b1461067b578063995c5e9d14610642578063ad1e090114610607578063be9a6555146105c6578063d2052a4214610410578063d5400f6f146103d45763fc0c546a1461038d5750610011565b90346103d057816003193601126103d057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5091346101f15760203660031901126101f157359160015483101561040d57506103ff6020926107e2565b91905490519160031b1c8152f35b80fd5b509190346101f157826003193601126101f15760025460001981019081116105b35761044063ffffffff9161078c565b90549060031b1c1642106105a657828080804773b4e54a5b6b80afdb5dc4b5d8c1c66b75ff75fcae5af13d156105a1573d67ffffffffffffffff811161058e57825190610497601f8201601f1916602001836108da565b81528460203d92013e5b156105815780516370a0823160e01b815230818401527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692849190602082602481885afa918215610577578392610543575b50843b156101f1576024908385519687948593630852cd8d60e31b85528401525af190811561053a575061052e575080f35b610537906108b0565b80f35b513d84823e3d90fd5b9091506020813d60201161056f575b8161055f602093836108da565b810103126101f1575190386104fc565b3d9150610552565b84513d85823e3d90fd5b51633d3a938360e01b8152fd5b634e487b7160e01b855260418452602485fd5b6104a1565b51635ddf2aeb60e01b8152fd5b634e487b7160e01b845260118352602484fd5b5090346103d057816003193601126103d0576020905163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5090346103d057816003193601126103d057602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5091346101f15760203660031901126101f157356001600160a01b038116908190036101f1578282916020945280845220549051908152f35b5090346103d057816003193601126103d0576020905173b4e54a5b6b80afdb5dc4b5d8c1c66b75ff75fcae8152f35b5091346101f15760203660031901126101f157359160025483101561040d575063ffffffff6106da60209361078c565b92905490519260031b1c168152f35b5090346103d057816003193601126103d057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5090346103d057816003193601126103d057602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5090346103d057816003193601126103d057602090610785610819565b9051908152f35b906002548210156107cc576002600052601c8260031c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019260021b1690565b634e487b7160e01b600052603260045260246000fd5b6001548110156107cc5760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b63ffffffff807f000000000000000000000000000000000000000000000000000000000000000016421061089e576002549060005b828110610867576040516346ea3b2b60e01b8152600490fd5b816108718261078c565b919054600392831b1c16421061088a575060010161084e565b925061089691506107e2565b9054911b1c90565b6040516346ea3b2b60e01b8152600490fd5b67ffffffffffffffff81116108c457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176108c45760405256fea2646970667358221220520f680fd564b10fae65d4120c6b68c8b941e322152ca105ba3eca5b0524aa3164736f6c6343000817003300000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000e13f4712233c534fbabd769e92b4acc71653215700000000000000000000000030d60732a26137696a2671cfea19a9e8510e35fa0000000000000000000000000000000000000000000000000000000065e26c00000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000006f05b59d3b200000000000000000000000000000000000000000000000000001bc16d674ec80000000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000075300000000000000000000000000000000000000000000000000000000000006b6c00000000000000000000000000000000000000000000000000000000000061a800000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000065ecf8000000000000000000000000000000000000000000000000000000000065fa27000000000000000000000000000000000000000000000000000000000066075600","gas":"723743","from":"0xaF7E68bCb2Fc7295492A00177f14F59B92814e70","transactionSettings":{"chainId":11155111,"nonce":"123","baseFee":"1000000000","priorityFee":"1000000000"},"salt":"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000OPENMESHTEST","artifact":{"abi":[{"type":"constructor","inputs":[{"name":"_tokensPerWeiPerPeriod","type":"uint256[]","internalType":"uint256[]"},{"name":"_token","type":"address","internalType":"contract IERC20MintBurnable"},{"name":"_nft","type":"address","internalType":"contract IERC721Mintable"},{"name":"_start","type":"uint32","internalType":"uint32"},{"name":"_periodEnds","type":"uint32[]","internalType":"uint32[]"},{"name":"_minWeiPerAccount","type":"uint256","internalType":"uint256"},{"name":"_maxWeiPerAccount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"fallback","stateMutability":"payable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"collectContributions","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"contributed","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxWeiPerAccount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"minWeiPerAccount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"nft","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC721Mintable"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"periodEnds","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"start","inputs":[],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IERC20MintBurnable"}],"stateMutability":"view"},{"type":"function","name":"tokensPerWei","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"tokensPerWeiPerPeriod","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"ContributionMade","inputs":[{"name":"from","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"givenTokens","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"givenNFT","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"error","name":"FundraiserNotOverYet","inputs":[]},{"type":"error","name":"LessThanMinPerAccount","inputs":[]},{"type":"error","name":"NoFundsAttached","inputs":[]},{"type":"error","name":"NotDuringFundraisingPeriod","inputs":[]},{"type":"error","name":"SurpassMaxPerAccount","inputs":[]},{"type":"error","name":"TreasuryReverted","inputs":[]}],"bytecode":"0x61012060405234620003c95762000d7b803803806200001e81620003df565b92833981019060e081830312620003c95780516001600160401b0390818111620003c95782019280601f85011215620003c95783516020906200006b620000658262000405565b620003df565b9582878381520183819360051b83010191858311620003c95784809101915b838310620003ce57508701516001600160a01b0396925090508581168103620003c95760408701519586168603620003c957620000ca606088016200041d565b6080880151838111620003c95788019086601f83011215620003c957815196620000f8620000658962000405565b9287848a8152019088829a60051b820101928311620003c95788809101915b838310620003ae575050505060c060a08a015199015199519784891162000398576801000000000000000093848a11620003985760019687548b8955808c1062000378575b509960009a888c52898c20898d5b8481106200036557505050505060805260a05260c05251918211620003515781116200033d576002938454828655808310620002eb575b5092848652808620938260031c95875b878110620002a757506007198416909303928362000245575b898960e052610100908152604051610932918262000449833960805182818160cb015281816103a101526104b9015260a05182818161014f01526106fe015260c0518281816105e30152610821015260e051828181603a015281816102b201526107450152518181816061015281816102d9015261061f0152f35b909392919087905b8382106200026b5750505050505001553880808080808080620001ca565b909192938362000299879a63ffffffff849951169086861b60031b9163ffffffff809116831b921b19161790565b99019594939201906200024d565b8590898a5b8660088210620002c35750508189015501620001b1565b8651960195899463ffffffff91821683881b60031b90811b92901b19909316179101620002ac565b6200031b90868852858820600780860160031c820192601c878b1b168062000322575b500160031c01906200042f565b38620001a1565b60001990818601918254918c0360031b1c169055386200030e565b634e487b7160e01b85526041600452602485fd5b634e487b7160e01b86526041600452602486fd5b8c845194019381840155018a906200016a565b6200039190896000528c8b60002091820191016200042f565b386200015c565b634e487b7160e01b600052604160045260246000fd5b8190620003bb846200041d565b815201910190889062000117565b600080fd5b82518152918101918591016200008a565b6040519190601f01601f191682016001600160401b038111838210176200039857604052565b6001600160401b038111620003985760051b60200190565b519063ffffffff82168203620003c957565b8181106200043b575050565b600081556001016200042f56fe60406080815260049081361015610308575b361561028f57600091341561028157338352602091838352808420549034820180921161026e577f00000000000000000000000000000000000000000000000000000000000000008210610260577f00000000000000000000000000000000000000000000000000000000000000009182811161025057610090610819565b92833402933485040361023d57825163a9059cbb60e01b815233818701526024810185905290821494906001600160a01b039087816044818c7f000000000000000000000000000000000000000000000000000000000000000087165af18015610233579087916101f5575b5061014a575b7f7afb7377664352bd569dc64d3f845c00dbf2bb349b28db9e3f9aec12f7baafcc60808888888888818f338152808752205580519333855234908501528301526060820152a1005b9087917f000000000000000000000000000000000000000000000000000000000000000016803b156101f15760248392865194859384926335313c2160e11b845233908401525af180156101e757927f7afb7377664352bd569dc64d3f845c00dbf2bb349b28db9e3f9aec12f7baafcc978193926080989796956101d8575b50975092939495819250610102565b6101e1906108b0565b386101c9565b83513d89823e3d90fd5b8280fd5b90508781813d831161022c575b61020c81836108da565b810103126102285751801515036102245785386100fc565b8780fd5b8880fd5b503d610202565b85513d8b823e3d90fd5b634e487b7160e01b875260118552602487fd5b815163084d70b160e21b81528490fd5b5162572b0760e61b81529050fd5b634e487b7160e01b855260118352602485fd5b905163580d5e4b60e01b8152fd5b600091341561028157338352602091838352808420549034820180921161026e577f00000000000000000000000000000000000000000000000000000000000000008210610260577f00000000000000000000000000000000000000000000000000000000000000009182811161025057610090610819565b6000803560e01c806322d60d17146107685780632fcafec31461072d57806347ccca02146106e9578063753c2638146106aa5780638da5cb5b1461067b578063995c5e9d14610642578063ad1e090114610607578063be9a6555146105c6578063d2052a4214610410578063d5400f6f146103d45763fc0c546a1461038d5750610011565b90346103d057816003193601126103d057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b5091346101f15760203660031901126101f157359160015483101561040d57506103ff6020926107e2565b91905490519160031b1c8152f35b80fd5b509190346101f157826003193601126101f15760025460001981019081116105b35761044063ffffffff9161078c565b90549060031b1c1642106105a657828080804773b4e54a5b6b80afdb5dc4b5d8c1c66b75ff75fcae5af13d156105a1573d67ffffffffffffffff811161058e57825190610497601f8201601f1916602001836108da565b81528460203d92013e5b156105815780516370a0823160e01b815230818401527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031692849190602082602481885afa918215610577578392610543575b50843b156101f1576024908385519687948593630852cd8d60e31b85528401525af190811561053a575061052e575080f35b610537906108b0565b80f35b513d84823e3d90fd5b9091506020813d60201161056f575b8161055f602093836108da565b810103126101f1575190386104fc565b3d9150610552565b84513d85823e3d90fd5b51633d3a938360e01b8152fd5b634e487b7160e01b855260418452602485fd5b6104a1565b51635ddf2aeb60e01b8152fd5b634e487b7160e01b845260118352602484fd5b5090346103d057816003193601126103d0576020905163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5090346103d057816003193601126103d057602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5091346101f15760203660031901126101f157356001600160a01b038116908190036101f1578282916020945280845220549051908152f35b5090346103d057816003193601126103d0576020905173b4e54a5b6b80afdb5dc4b5d8c1c66b75ff75fcae8152f35b5091346101f15760203660031901126101f157359160025483101561040d575063ffffffff6106da60209361078c565b92905490519260031b1c168152f35b5090346103d057816003193601126103d057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5090346103d057816003193601126103d057602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5090346103d057816003193601126103d057602090610785610819565b9051908152f35b906002548210156107cc576002600052601c8260031c7f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace019260021b1690565b634e487b7160e01b600052603260045260246000fd5b6001548110156107cc5760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600090565b63ffffffff807f000000000000000000000000000000000000000000000000000000000000000016421061089e576002549060005b828110610867576040516346ea3b2b60e01b8152600490fd5b816108718261078c565b919054600392831b1c16421061088a575060010161084e565b925061089691506107e2565b9054911b1c90565b6040516346ea3b2b60e01b8152600490fd5b67ffffffffffffffff81116108c457604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176108c45760405256fea2646970667358221220520f680fd564b10fae65d4120c6b68c8b941e322152ca105ba3eca5b0524aa3164736f6c63430008170033","compiler":{"version":"v0.8.23+commit.f704f362"},"contractName":"src/OpenmeshGenesis.sol:OpenmeshGenesis","license":"MIT","jsonDescription":{"language":"Solidity","sources":{"lib/open-token/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"lib/open-token/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"lib/open-token/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"lib/open-token/src/IERC20MintBurnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC20} from \"../lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\n\ninterface IERC20MintBurnable is IERC20 {\n    /// @notice Mints tokens to a specific account.\n    /// @param account The account that will receive the minted tokens.\n    /// @param amount The amount of tokens to mint.\n    /// @dev Should be locked behind a permission/restriction.\n    function mint(address account, uint256 amount) external;\n\n    /// @notice Burns tokens from your account.\n    /// @param amount The amount of tokens to burn.\n    function burn(uint256 amount) external;\n}\n"},"lib/openmesh-admin/lib/ens-reverse-claimable/src/ENSReverseClaimable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract ENSReverseClaimable {\n    /// @notice ENS reverse name resolution is claimable by the owner of the contract.\n    function owner() external pure virtual returns (address) {\n        return 0xaF7E68bCb2Fc7295492A00177f14F59B92814e70; // plopmenz.eth\n    }\n}\n"},"lib/openmesh-admin/src/Openmesh.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract Openmesh {\n    address constant OPENMESH_ADMIN = 0xB4e54a5B6b80AFdb5DC4B5d8c1c66b75FF75FCaE;\n}\n"},"lib/openmesh-admin/src/OpenmeshENSReverseClaimable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {ENSReverseClaimable} from \"../lib/ens-reverse-claimable/src/ENSReverseClaimable.sol\";\nimport {Openmesh} from \"./Openmesh.sol\";\n\ncontract OpenmeshENSReverseClaimable is Openmesh, ENSReverseClaimable {\n    /// @inheritdoc ENSReverseClaimable\n    function owner() external pure override returns (address) {\n        return OPENMESH_ADMIN;\n    }\n}\n"},"lib/validator-pass/src/IERC721Mintable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\ninterface IERC721Mintable is IERC721 {\n    /// Mints an ERC721 token to a specific account.\n    /// @dev Should be locked behind a permission.\n    /// @param account The account that will receive the minted token.\n    function mint(address account) external;\n}\n"},"src/IOpenmeshGenesis.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOpenmeshGenesis {\n    error NoFundsAttached();\n    error LessThanMinPerAccount();\n    error SurpassMaxPerAccount();\n\n    error TreasuryReverted();\n\n    error NotDuringFundraisingPeriod();\n    error FundraiserNotOverYet();\n\n    event ContributionMade(address from, uint256 amount, uint256 givenTokens, bool givenNFT);\n\n    /// Returns the current rate (amount of tokens received per wei of native currency contributed).\n    function tokensPerWei() external view returns (uint256);\n\n    /// Sends all native currency stored in this contract to the DAO treasury.\n    /// @dev Can only be called after the event is over. Any remaining tokens that the contract has will be burned.\n    function collectContributions() external;\n}\n"},"src/OpenmeshGenesis.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IOpenmeshGenesis} from \"./IOpenmeshGenesis.sol\";\nimport {IERC20MintBurnable} from \"../lib/open-token/src/IERC20MintBurnable.sol\";\nimport {IERC721Mintable} from \"../lib/validator-pass/src/IERC721Mintable.sol\";\n\nimport {OpenmeshENSReverseClaimable} from \"../lib/openmesh-admin/src/OpenmeshENSReverseClaimable.sol\";\n\ncontract OpenmeshGenesis is OpenmeshENSReverseClaimable, IOpenmeshGenesis {\n    mapping(address => uint256) public contributed;\n    uint256[] public tokensPerWeiPerPeriod;\n    IERC20MintBurnable public immutable token;\n    IERC721Mintable public immutable nft;\n    uint32 public immutable start;\n    uint32[] public periodEnds;\n    uint256 public immutable minWeiPerAccount;\n    uint256 public immutable maxWeiPerAccount;\n\n    constructor(\n        uint256[] memory _tokensPerWeiPerPeriod,\n        IERC20MintBurnable _token,\n        IERC721Mintable _nft,\n        uint32 _start,\n        uint32[] memory _periodEnds,\n        uint256 _minWeiPerAccount,\n        uint256 _maxWeiPerAccount\n    ) {\n        tokensPerWeiPerPeriod = _tokensPerWeiPerPeriod;\n        token = _token;\n        nft = _nft;\n        start = _start;\n        periodEnds = _periodEnds;\n        minWeiPerAccount = _minWeiPerAccount;\n        maxWeiPerAccount = _maxWeiPerAccount;\n    }\n\n    fallback() external payable {\n        _fundraise();\n    }\n\n    receive() external payable {\n        _fundraise();\n    }\n\n    /// @inheritdoc IOpenmeshGenesis\n    function tokensPerWei() public view returns (uint256) {\n        if (block.timestamp < start) {\n            revert NotDuringFundraisingPeriod();\n        }\n\n        for (uint256 periodIndex; periodIndex < periodEnds.length;) {\n            // Find first period with block.timestamp earlier than that period end\n            if (block.timestamp < periodEnds[periodIndex]) {\n                return tokensPerWeiPerPeriod[periodIndex];\n            }\n\n            unchecked {\n                ++periodIndex;\n            }\n        }\n\n        revert NotDuringFundraisingPeriod();\n    }\n\n    function _fundraise() internal {\n        if (msg.value == 0) {\n            revert NoFundsAttached();\n        }\n\n        uint256 personalContribution = contributed[msg.sender] + msg.value;\n        if (personalContribution < minWeiPerAccount) {\n            revert LessThanMinPerAccount();\n        }\n        if (personalContribution > maxWeiPerAccount) {\n            revert SurpassMaxPerAccount();\n        }\n\n        uint256 giveTokens = msg.value * tokensPerWei();\n        bool giveNFT = personalContribution == maxWeiPerAccount;\n\n        token.transfer(msg.sender, giveTokens);\n        if (giveNFT) {\n            nft.mint(msg.sender);\n        }\n\n        contributed[msg.sender] = personalContribution;\n        emit ContributionMade(msg.sender, msg.value, giveTokens, giveNFT);\n    }\n\n    /// @inheritdoc IOpenmeshGenesis\n    function collectContributions() external {\n        if (block.timestamp < periodEnds[periodEnds.length - 1]) {\n            revert FundraiserNotOverYet();\n        }\n\n        // Send all native currency of this contract to treasury\n        (bool succes,) = OPENMESH_ADMIN.call{value: address(this).balance}(\"\");\n        if (!succes) {\n            revert TreasuryReverted();\n        }\n\n        // Burn remaining tokens\n        token.burn(token.balanceOf(address(this)));\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"remappings":["@openzeppelin/contracts/=lib/open-token/lib/openzeppelin-contracts/contracts/","ds-test/=lib/openmesh-admin/lib/forge-std/lib/ds-test/src/","ens-reverse-claimable/=lib/openmesh-admin/lib/ens-reverse-claimable/src/","erc4626-tests/=lib/open-token/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","open-token/=lib/open-token/src/","openmesh-admin/=lib/openmesh-admin/src/","openzeppelin-contracts/=lib/open-token/lib/openzeppelin-contracts/","smart-account/=lib/openmesh-admin/lib/smart-account/src/","validator-pass/=lib/validator-pass/src/"],"viaIR":true},"evmVersion":"paris","metadata":{"useLiteralContent":true}}},"source":"/home/plopmenz/openmesh-smart-contracts/lib/openmesh-genesis","submitted":{"transactionHash":"0x4d8422ed585403fe76a2cb2589d0e4fea53ba1b6d0f927244637d407dd7a3826","date":"2024-03-27T19:45:16.467Z"}}